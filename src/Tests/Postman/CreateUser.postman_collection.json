{
	"variables": [],
	"info": {
		"name": "InvestorAPI_CreateUser",
		"_postman_id": "7c57a893-5dd1-35db-e499-13c183530f04",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"description": "",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseStatus = responseCode.code;",
									"var expectedStatus;",
									"var testCaseName;",
									"",
									"if(!data[\"is_displayName_valid\"]) {",
									"    testCaseName = `Reject invalid displayName: \"${data['displayName']}\" // ${data['scenario']}`;",
									"    expectedStatus = 400;",
									"}",
									"else if(!data[\"is_email_valid\"]) {",
									"    testCaseName = `Reject invalid email: \"${data['email']}\" // ${data['scenario']}`;",
									"    expectedStatus = 400;",
									"}",
									"else if(!data[\"is_password_valid\"]) {",
									"    testCaseName = `Reject invalid password: \"${data['password']}\" // ${data['scenario']}`;",
									"    expectedStatus = 400;",
									"}",
									"else {",
									"    expectedStatus = 201;",
									"    testCaseName = `Accept valid data: \"${data['displayName']}\", \"${data['email']}\", \"${data['password']}\" // ${data['scenario']}`;",
									"}",
									"",
									"tests[testCaseName] = responseStatus === expectedStatus;",
									"",
									"// skip next steps if user not created",
									"if(responseStatus === 400) {",
									"    postman.setNextRequest(null);",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{URL}}/api/1.0/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"displayName\": \"{{displayName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}"
						},
						"description": "Attempt to create a new user.\n\nExpected response:\n* Status code: 201"
					},
					"response": []
				},
				{
					"name": "Sign In",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200 OK\"] = responseCode.code === 200;",
									"tests[\"Response has Token\"] = responseBody.has(\"accessToken\");",
									"tests[\"Response has Token expiration time\"] = responseBody.has(\"expires\");",
									"",
									"// Remember the JWT for subsequent requests.",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token\", jsonData.accessToken);"
								]
							}
						}
					],
					"request": {
						"url": "{{URL}}/api/1.0/token",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}"
						},
						"description": "Test that an existing user can authenticate and get back a JWT Token with an expiration time.\n\nRequest requires:\n* Body: JSON of email, password\n\nExpected response:\n* Status code: 200\n* JSON data with accessToken and expires"
					},
					"response": []
				},
				{
					"name": "Check User Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"// Remember the account-id for subsequent requests.",
									"postman.setEnvironmentVariable(\"accountId\", jsonData.accounts[0].id);",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// sign in the user",
									"eval(postman.getEnvironmentVariable(\"code_SignIn\"));"
								]
							}
						}
					],
					"request": {
						"url": "{{URL}}/api/1.0/users",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"test.user@host.com\",\r\n  \"password\": \"a1b2c3d4e5f6\"\r\n}"
						},
						"description": "This request tests whether an authenticated user can view their details.\n\nThe response should return JSON data containing the email, displayName, level, accounts, and account balance associated with the authenticated user.\n\nThe Id of the user Account is set as an environment variable (accountId)."
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"User deleted\"] = responseCode.code === 204;"
								]
							}
						}
					],
					"request": {
						"url": "{{URL}}/api/1.0/users",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}